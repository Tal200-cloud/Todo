/* Base Styles */
:root {
  --primary-color: #4361ee;
  --secondary-color: #3f37c9;
  --accent-color: #4cc9f0;
  --light-color: #f8f9fa;
  --dark-color: #212529;
  --success-color: #4bb543;
  --danger-color: #ff3333;
  --border-radius: 8px;
  --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  --transition: all 0.3s ease;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.6;
  background-color: #f5f7fa;
  color: var(--dark-color);
  text-align: center;

  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

/* App Container */
.App {
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem;
  min-height: 100vh;
}

.App-header {
  text-align: center;
  margin-bottom: 2rem;
}

.App-header h1 {
  color: var(--primary-color);
  font-size: 2.5rem;
  margin-bottom: 0.5rem;
}

/* Todo List Container */
.todo-container {
  background: white;
  border-radius: var(--border-radius);
  padding: 2rem;
  box-shadow: var(--box-shadow);

}

/* Todo List */
.todo-list {
  list-style: none;
  margin: 1rem 0;
}

.todo-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  margin-bottom: 0.75rem;
  background: white;
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  transition: var(--transition);
}

.todo-item:hover {
  transform: translateY(-2px);
}

.todo-content {
  flex-grow: 1;
  margin: 0 1rem;
}

.todo-title {
  font-weight: 600;
  margin-bottom: 0.25rem;
  color: var(--dark-color);
}

.todo-description {
  color: #6c757d;
  font-size: 0.9rem;
}

.todo-completed .todo-title,
.todo-completed .todo-description {
  color: #adb5bd;
  text-decoration: line-through;
}

.todo-actions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* Form Styles */
.todo-form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: 2rem;
}

.form-group {
  display: flex;
  flex-direction: column;
}

.form-group label {
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.todo-form input[type="text"],
.todo-form textarea {
  padding: 0.75rem;
  border: 1px solid #dee2e6;
  border-radius: var(--border-radius);
  font-size: 1rem;
  transition: var(--transition);
}

.todo-form input[type="text"]:focus,
.todo-form textarea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(67, 97, 238, 0.2);
}

.todo-form textarea {
  min-height: 80px;
  resize: vertical;
}

/* Button Styles */
.btn {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: var(--border-radius);
  font-size: 1rem;
  font-weight: 500;

import React from 'react';
import api from '../api';

const DeleteTodo = ({ id, onDelete }) => {
  const handleDelete = async () => {
    try {
      await api.delete(`/todos/${id}`);
      onDelete();
    } catch (error) {
      console.error("Error deleting todo", error);
    }
  };

  return (
    <button onClick={handleDelete} style={{ marginLeft: '10px' }}>
      Delete
    </button>
  );
};

export default DeleteTodo;: pointer;
  transition: var(--transition);
}

.btn-primary {
  background-color: var(--primary-color);
  color: white;
}

.btn-primary:hover {
  background-color: var(--secondary-color);
}

.btn-danger {
  background-color: var(--danger-color);
  color: white;
}

.btn-danger:hover {
  background-color: #e60000;
}

/* Checkbox Styles */
.checkbox-container {
  display: flex;
  align-items: center;
}

.checkbox-input {
  width: 20px;
  height: 20px;
  cursor: pointer;
  accent-color: var(--primary-color);
}

/* Status Indicators */
.todo-status {
  font-size: 0.8rem;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  margin-left: 0.5rem;
}

.status-completed {
  background-color: #e6f7e6;
  color: var(--success-color);
}

.status-pending {
  background-color: #fff3e6;
  color: #ff9900;
}

/* Empty State */
.empty-state {
  text-align: center;
  padding: 2rem;
  color: #6c757d;
}

/* Responsive Design */
@media (max-width: 768px) {
  .App {
    padding: 1rem;
  }

  .todo-item {
    flex-direction: column;
    align-items: flex-start;
  }

  .todo-actions {
    margin-top: 1rem;
    width: 100%;
    justify-content: flex-end;
  }
}